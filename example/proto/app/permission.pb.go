// Code generated by protoc-gen-go. DO NOT EDIT.
// source: app/permission.proto

package app

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PermissionInfo struct {
	//@inject_tag: json:"id"
	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	//@inject_tag: json:"app_id" binding:"required"
	AppID int32 `protobuf:"varint,2,opt,name=appID,proto3" json:"appID,omitempty"`
	//@inject_tag: json:"module_id" binding:"required"
	ModuleID int32 `protobuf:"varint,3,opt,name=moduleID,proto3" json:"moduleID,omitempty"`
	//@inject_tag: json:"name" binding:"required"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	//@inject_tag: json:"name_en" binding:"required"
	NameEn string `protobuf:"bytes,5,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	//@inject_tag: json:"code"
	Code string `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	//@inject_tag: json:"method" binding:"required"
	Method string `protobuf:"bytes,7,opt,name=method,proto3" json:"method,omitempty"`
	//@inject_tag: json:"path" binding:"required"
	Path string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	//@inject_tag: json:"is_base"
	IsBase int32 `protobuf:"varint,9,opt,name=isBase,proto3" json:"isBase,omitempty"`
	//@inject_tag: json:"open"
	Open                 int32    `protobuf:"varint,10,opt,name=open,proto3" json:"open,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionInfo) Reset()         { *m = PermissionInfo{} }
func (m *PermissionInfo) String() string { return proto.CompactTextString(m) }
func (*PermissionInfo) ProtoMessage()    {}
func (*PermissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{0}
}

func (m *PermissionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionInfo.Unmarshal(m, b)
}
func (m *PermissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionInfo.Marshal(b, m, deterministic)
}
func (m *PermissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionInfo.Merge(m, src)
}
func (m *PermissionInfo) XXX_Size() int {
	return xxx_messageInfo_PermissionInfo.Size(m)
}
func (m *PermissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionInfo proto.InternalMessageInfo

func (m *PermissionInfo) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PermissionInfo) GetAppID() int32 {
	if m != nil {
		return m.AppID
	}
	return 0
}

func (m *PermissionInfo) GetModuleID() int32 {
	if m != nil {
		return m.ModuleID
	}
	return 0
}

func (m *PermissionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PermissionInfo) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

func (m *PermissionInfo) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *PermissionInfo) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *PermissionInfo) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *PermissionInfo) GetIsBase() int32 {
	if m != nil {
		return m.IsBase
	}
	return 0
}

func (m *PermissionInfo) GetOpen() int32 {
	if m != nil {
		return m.Open
	}
	return 0
}

type PermissionRes struct {
	//@inject_tag: json:"id"
	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	//@inject_tag: json:"app_id" binding:"required"
	AppID int32 `protobuf:"varint,2,opt,name=appID,proto3" json:"appID,omitempty"`
	//@inject_tag: json:"module_id" binding:"required"
	ModuleID int32 `protobuf:"varint,3,opt,name=moduleID,proto3" json:"moduleID,omitempty"`
	//@inject_tag: json:"name" binding:"required"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	//@inject_tag: json:"name_en" binding:"required"
	NameEn string `protobuf:"bytes,5,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	//@inject_tag: json:"code"
	Code string `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
	//@inject_tag: json:"method" binding:"required"
	Method string `protobuf:"bytes,7,opt,name=method,proto3" json:"method,omitempty"`
	//@inject_tag: json:"path" binding:"required"
	Path string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	//@inject_tag: json:"app_name"
	AppName string `protobuf:"bytes,9,opt,name=appName,proto3" json:"appName,omitempty"`
	//@inject_tag: json:"module_name"
	ModuleName string `protobuf:"bytes,10,opt,name=moduleName,proto3" json:"moduleName,omitempty"`
	//@inject_tag: json:"is_base"
	IsBase int32 `protobuf:"varint,11,opt,name=isBase,proto3" json:"isBase,omitempty"`
	//@inject_tag: json:"open"
	Open                 int32    `protobuf:"varint,12,opt,name=open,proto3" json:"open,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionRes) Reset()         { *m = PermissionRes{} }
func (m *PermissionRes) String() string { return proto.CompactTextString(m) }
func (*PermissionRes) ProtoMessage()    {}
func (*PermissionRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{1}
}

func (m *PermissionRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionRes.Unmarshal(m, b)
}
func (m *PermissionRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionRes.Marshal(b, m, deterministic)
}
func (m *PermissionRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionRes.Merge(m, src)
}
func (m *PermissionRes) XXX_Size() int {
	return xxx_messageInfo_PermissionRes.Size(m)
}
func (m *PermissionRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionRes.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionRes proto.InternalMessageInfo

func (m *PermissionRes) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PermissionRes) GetAppID() int32 {
	if m != nil {
		return m.AppID
	}
	return 0
}

func (m *PermissionRes) GetModuleID() int32 {
	if m != nil {
		return m.ModuleID
	}
	return 0
}

func (m *PermissionRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PermissionRes) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

func (m *PermissionRes) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *PermissionRes) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *PermissionRes) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *PermissionRes) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *PermissionRes) GetModuleName() string {
	if m != nil {
		return m.ModuleName
	}
	return ""
}

func (m *PermissionRes) GetIsBase() int32 {
	if m != nil {
		return m.IsBase
	}
	return 0
}

func (m *PermissionRes) GetOpen() int32 {
	if m != nil {
		return m.Open
	}
	return 0
}

type PermissionInfoSmp struct {
	//@inject_tag: json:"id"
	ID int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	//@inject_tag: json:"name" binding:"required"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	//@inject_tag: json:"code"
	Code string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	//@inject_tag: json:"method" binding:"required"
	Method string `protobuf:"bytes,6,opt,name=method,proto3" json:"method,omitempty"`
	//@inject_tag: json:"path" binding:"required"
	Path string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	//@inject_tag: json:"is_base"
	IsBase               int32    `protobuf:"varint,8,opt,name=isBase,proto3" json:"isBase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionInfoSmp) Reset()         { *m = PermissionInfoSmp{} }
func (m *PermissionInfoSmp) String() string { return proto.CompactTextString(m) }
func (*PermissionInfoSmp) ProtoMessage()    {}
func (*PermissionInfoSmp) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{2}
}

func (m *PermissionInfoSmp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionInfoSmp.Unmarshal(m, b)
}
func (m *PermissionInfoSmp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionInfoSmp.Marshal(b, m, deterministic)
}
func (m *PermissionInfoSmp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionInfoSmp.Merge(m, src)
}
func (m *PermissionInfoSmp) XXX_Size() int {
	return xxx_messageInfo_PermissionInfoSmp.Size(m)
}
func (m *PermissionInfoSmp) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionInfoSmp.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionInfoSmp proto.InternalMessageInfo

func (m *PermissionInfoSmp) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *PermissionInfoSmp) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PermissionInfoSmp) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *PermissionInfoSmp) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *PermissionInfoSmp) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *PermissionInfoSmp) GetIsBase() int32 {
	if m != nil {
		return m.IsBase
	}
	return 0
}

type UserPermissionReq struct {
	AppID                int32    `protobuf:"varint,1,opt,name=appID,proto3" json:"appID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserPermissionReq) Reset()         { *m = UserPermissionReq{} }
func (m *UserPermissionReq) String() string { return proto.CompactTextString(m) }
func (*UserPermissionReq) ProtoMessage()    {}
func (*UserPermissionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{3}
}

func (m *UserPermissionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPermissionReq.Unmarshal(m, b)
}
func (m *UserPermissionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPermissionReq.Marshal(b, m, deterministic)
}
func (m *UserPermissionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPermissionReq.Merge(m, src)
}
func (m *UserPermissionReq) XXX_Size() int {
	return xxx_messageInfo_UserPermissionReq.Size(m)
}
func (m *UserPermissionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPermissionReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserPermissionReq proto.InternalMessageInfo

func (m *UserPermissionReq) GetAppID() int32 {
	if m != nil {
		return m.AppID
	}
	return 0
}

type PermissionData struct {
	//@inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//@inject_tag: json:"name_en"
	NameEn string `protobuf:"bytes,2,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	//@inject_tag: json:"method"
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	//@inject_tag: json:"path"
	Path                 string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionData) Reset()         { *m = PermissionData{} }
func (m *PermissionData) String() string { return proto.CompactTextString(m) }
func (*PermissionData) ProtoMessage()    {}
func (*PermissionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{4}
}

func (m *PermissionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionData.Unmarshal(m, b)
}
func (m *PermissionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionData.Marshal(b, m, deterministic)
}
func (m *PermissionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionData.Merge(m, src)
}
func (m *PermissionData) XXX_Size() int {
	return xxx_messageInfo_PermissionData.Size(m)
}
func (m *PermissionData) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionData.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionData proto.InternalMessageInfo

func (m *PermissionData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PermissionData) GetNameEn() string {
	if m != nil {
		return m.NameEn
	}
	return ""
}

func (m *PermissionData) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *PermissionData) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type UserPermissionRes struct {
	Code                 int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data                 []*PermissionData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserPermissionRes) Reset()         { *m = UserPermissionRes{} }
func (m *UserPermissionRes) String() string { return proto.CompactTextString(m) }
func (*UserPermissionRes) ProtoMessage()    {}
func (*UserPermissionRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{5}
}

func (m *UserPermissionRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserPermissionRes.Unmarshal(m, b)
}
func (m *UserPermissionRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserPermissionRes.Marshal(b, m, deterministic)
}
func (m *UserPermissionRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserPermissionRes.Merge(m, src)
}
func (m *UserPermissionRes) XXX_Size() int {
	return xxx_messageInfo_UserPermissionRes.Size(m)
}
func (m *UserPermissionRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UserPermissionRes.DiscardUnknown(m)
}

var xxx_messageInfo_UserPermissionRes proto.InternalMessageInfo

func (m *UserPermissionRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UserPermissionRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *UserPermissionRes) GetData() []*PermissionData {
	if m != nil {
		return m.Data
	}
	return nil
}

type PermissionCreateReq struct {
	Data                 *PermissionInfo `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PermissionCreateReq) Reset()         { *m = PermissionCreateReq{} }
func (m *PermissionCreateReq) String() string { return proto.CompactTextString(m) }
func (*PermissionCreateReq) ProtoMessage()    {}
func (*PermissionCreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{6}
}

func (m *PermissionCreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionCreateReq.Unmarshal(m, b)
}
func (m *PermissionCreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionCreateReq.Marshal(b, m, deterministic)
}
func (m *PermissionCreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionCreateReq.Merge(m, src)
}
func (m *PermissionCreateReq) XXX_Size() int {
	return xxx_messageInfo_PermissionCreateReq.Size(m)
}
func (m *PermissionCreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionCreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionCreateReq proto.InternalMessageInfo

func (m *PermissionCreateReq) GetData() *PermissionInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type PermissionUpdateReq struct {
	//@inject_tag: json:"permission_id"
	PermissionID         int32           `protobuf:"varint,1,opt,name=permissionID,proto3" json:"permissionID,omitempty"`
	Data                 *PermissionInfo `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PermissionUpdateReq) Reset()         { *m = PermissionUpdateReq{} }
func (m *PermissionUpdateReq) String() string { return proto.CompactTextString(m) }
func (*PermissionUpdateReq) ProtoMessage()    {}
func (*PermissionUpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{7}
}

func (m *PermissionUpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionUpdateReq.Unmarshal(m, b)
}
func (m *PermissionUpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionUpdateReq.Marshal(b, m, deterministic)
}
func (m *PermissionUpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionUpdateReq.Merge(m, src)
}
func (m *PermissionUpdateReq) XXX_Size() int {
	return xxx_messageInfo_PermissionUpdateReq.Size(m)
}
func (m *PermissionUpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionUpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionUpdateReq proto.InternalMessageInfo

func (m *PermissionUpdateReq) GetPermissionID() int32 {
	if m != nil {
		return m.PermissionID
	}
	return 0
}

func (m *PermissionUpdateReq) GetData() *PermissionInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type PermissionDelReq struct {
	//@inject_tag: json:"permission_ids" binding:"required"
	PermissionIDs        []int32  `protobuf:"varint,1,rep,packed,name=permissionIDs,proto3" json:"permissionIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionDelReq) Reset()         { *m = PermissionDelReq{} }
func (m *PermissionDelReq) String() string { return proto.CompactTextString(m) }
func (*PermissionDelReq) ProtoMessage()    {}
func (*PermissionDelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{8}
}

func (m *PermissionDelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionDelReq.Unmarshal(m, b)
}
func (m *PermissionDelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionDelReq.Marshal(b, m, deterministic)
}
func (m *PermissionDelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionDelReq.Merge(m, src)
}
func (m *PermissionDelReq) XXX_Size() int {
	return xxx_messageInfo_PermissionDelReq.Size(m)
}
func (m *PermissionDelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionDelReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionDelReq proto.InternalMessageInfo

func (m *PermissionDelReq) GetPermissionIDs() []int32 {
	if m != nil {
		return m.PermissionIDs
	}
	return nil
}

type PermissionListReq struct {
	//@inject_tag: form:"page"
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	//@inject_tag: form:"page_size"
	PageSize int32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	//@inject_tag: json:"app_id"form:"app_id"
	AppID int32 `protobuf:"varint,3,opt,name=appID,proto3" json:"appID,omitempty"`
	//@inject_tag: form:"module_id"
	ModuleID int32 `protobuf:"varint,4,opt,name=moduleID,proto3" json:"moduleID,omitempty"`
	//@inject_tag: form:"name" json:"name"
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	//@inject_tag: json:"type"
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	//@inject_tag: json:"permission_ids"
	PermissionIDs []int32 `protobuf:"varint,7,rep,packed,name=permissionIDs,proto3" json:"permissionIDs,omitempty"`
	//@inject_tag: json:"is_base"
	IsBase               string   `protobuf:"bytes,8,opt,name=isBase,proto3" json:"isBase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PermissionListReq) Reset()         { *m = PermissionListReq{} }
func (m *PermissionListReq) String() string { return proto.CompactTextString(m) }
func (*PermissionListReq) ProtoMessage()    {}
func (*PermissionListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{9}
}

func (m *PermissionListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionListReq.Unmarshal(m, b)
}
func (m *PermissionListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionListReq.Marshal(b, m, deterministic)
}
func (m *PermissionListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionListReq.Merge(m, src)
}
func (m *PermissionListReq) XXX_Size() int {
	return xxx_messageInfo_PermissionListReq.Size(m)
}
func (m *PermissionListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionListReq.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionListReq proto.InternalMessageInfo

func (m *PermissionListReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *PermissionListReq) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *PermissionListReq) GetAppID() int32 {
	if m != nil {
		return m.AppID
	}
	return 0
}

func (m *PermissionListReq) GetModuleID() int32 {
	if m != nil {
		return m.ModuleID
	}
	return 0
}

func (m *PermissionListReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PermissionListReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PermissionListReq) GetPermissionIDs() []int32 {
	if m != nil {
		return m.PermissionIDs
	}
	return nil
}

func (m *PermissionListReq) GetIsBase() string {
	if m != nil {
		return m.IsBase
	}
	return ""
}

type PermissionListData struct {
	//@inject_tag: json:"total"
	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	//@inject_tag: json:"list"
	List                 []*PermissionRes `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PermissionListData) Reset()         { *m = PermissionListData{} }
func (m *PermissionListData) String() string { return proto.CompactTextString(m) }
func (*PermissionListData) ProtoMessage()    {}
func (*PermissionListData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{10}
}

func (m *PermissionListData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionListData.Unmarshal(m, b)
}
func (m *PermissionListData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionListData.Marshal(b, m, deterministic)
}
func (m *PermissionListData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionListData.Merge(m, src)
}
func (m *PermissionListData) XXX_Size() int {
	return xxx_messageInfo_PermissionListData.Size(m)
}
func (m *PermissionListData) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionListData.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionListData proto.InternalMessageInfo

func (m *PermissionListData) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *PermissionListData) GetList() []*PermissionRes {
	if m != nil {
		return m.List
	}
	return nil
}

type PermissionListRes struct {
	Code                 int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data                 *PermissionListData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PermissionListRes) Reset()         { *m = PermissionListRes{} }
func (m *PermissionListRes) String() string { return proto.CompactTextString(m) }
func (*PermissionListRes) ProtoMessage()    {}
func (*PermissionListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f19084adc9cc191, []int{11}
}

func (m *PermissionListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PermissionListRes.Unmarshal(m, b)
}
func (m *PermissionListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PermissionListRes.Marshal(b, m, deterministic)
}
func (m *PermissionListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PermissionListRes.Merge(m, src)
}
func (m *PermissionListRes) XXX_Size() int {
	return xxx_messageInfo_PermissionListRes.Size(m)
}
func (m *PermissionListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PermissionListRes.DiscardUnknown(m)
}

var xxx_messageInfo_PermissionListRes proto.InternalMessageInfo

func (m *PermissionListRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *PermissionListRes) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *PermissionListRes) GetData() *PermissionListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PermissionInfo)(nil), "app.permissionInfo")
	proto.RegisterType((*PermissionRes)(nil), "app.permissionRes")
	proto.RegisterType((*PermissionInfoSmp)(nil), "app.permissionInfoSmp")
	proto.RegisterType((*UserPermissionReq)(nil), "app.userPermissionReq")
	proto.RegisterType((*PermissionData)(nil), "app.permissionData")
	proto.RegisterType((*UserPermissionRes)(nil), "app.userPermissionRes")
	proto.RegisterType((*PermissionCreateReq)(nil), "app.permissionCreateReq")
	proto.RegisterType((*PermissionUpdateReq)(nil), "app.permissionUpdateReq")
	proto.RegisterType((*PermissionDelReq)(nil), "app.permissionDelReq")
	proto.RegisterType((*PermissionListReq)(nil), "app.permissionListReq")
	proto.RegisterType((*PermissionListData)(nil), "app.permissionListData")
	proto.RegisterType((*PermissionListRes)(nil), "app.permissionListRes")
}

func init() { proto.RegisterFile("app/permission.proto", fileDescriptor_2f19084adc9cc191) }

var fileDescriptor_2f19084adc9cc191 = []byte{
	// 704 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x55, 0x5f, 0x6b, 0x13, 0x4f,
	0x14, 0x65, 0xff, 0x26, 0xb9, 0xed, 0x2f, 0x6d, 0xa7, 0xfd, 0xb5, 0x43, 0x44, 0x0d, 0xab, 0x68,
	0x44, 0x48, 0xa4, 0x05, 0x11, 0x04, 0x91, 0xb8, 0x3e, 0x04, 0x44, 0x64, 0x4b, 0x5f, 0x7c, 0x9b,
	0xb8, 0xd3, 0x76, 0x61, 0x93, 0x1d, 0x33, 0x53, 0x41, 0x3f, 0x8d, 0xf8, 0xe8, 0x37, 0x12, 0xbf,
	0x89, 0x4f, 0x32, 0x33, 0xbb, 0x93, 0xd9, 0xdd, 0x10, 0x7d, 0xf7, 0x69, 0x67, 0xce, 0x9d, 0x3b,
	0xf7, 0xdc, 0x33, 0xe7, 0x26, 0x70, 0x44, 0x18, 0x9b, 0x30, 0xba, 0x5a, 0x64, 0x9c, 0x67, 0xc5,
	0x72, 0xcc, 0x56, 0x85, 0x28, 0x90, 0x47, 0x18, 0x1b, 0xf4, 0x65, 0x68, 0x4e, 0x38, 0xd5, 0xe0,
	0xe0, 0xe4, 0x13, 0xc9, 0xb3, 0x94, 0x08, 0x3a, 0xa9, 0x16, 0x3a, 0x10, 0x7d, 0x75, 0xa1, 0xbf,
	0xbe, 0x62, 0xb6, 0xbc, 0x2c, 0x50, 0x1f, 0xdc, 0x59, 0x8c, 0x9d, 0xa1, 0x33, 0x0a, 0x12, 0x77,
	0x16, 0xa3, 0xdb, 0x10, 0x10, 0xc6, 0x66, 0x31, 0x76, 0x25, 0x34, 0xed, 0xfc, 0x9a, 0xfa, 0x03,
	0x77, 0xe4, 0x24, 0x1a, 0x45, 0xf7, 0xa0, 0xbb, 0x28, 0xd2, 0x9b, 0x9c, 0xce, 0x62, 0xec, 0xd5,
	0x4f, 0x98, 0x00, 0xba, 0x05, 0xfe, 0x92, 0x2c, 0x28, 0xf6, 0x87, 0xce, 0xa8, 0xa7, 0x0e, 0xac,
	0xdc, 0x7d, 0x27, 0x51, 0x20, 0xba, 0x0b, 0xa1, 0xfc, 0xbe, 0x5e, 0xe2, 0xa0, 0x1e, 0x2e, 0x61,
	0x84, 0xc0, 0xff, 0x50, 0xa4, 0x14, 0x87, 0x32, 0x9c, 0xa8, 0xb5, 0x4c, 0x5a, 0x50, 0x71, 0x5d,
	0xa4, 0xb8, 0xd3, 0x48, 0xd2, 0xb0, 0x2c, 0xc9, 0x88, 0xb8, 0xc6, 0xdd, 0x46, 0x49, 0x09, 0xa2,
	0x63, 0x08, 0x33, 0x3e, 0x25, 0x9c, 0xe2, 0x9e, 0xea, 0xb3, 0xdc, 0xc9, 0x4a, 0x05, 0xa3, 0x4b,
	0x0c, 0x0a, 0x55, 0xeb, 0xe8, 0x87, 0x0b, 0xff, 0xad, 0x25, 0x4a, 0x28, 0xff, 0x27, 0x14, 0xc2,
	0xd0, 0x21, 0x8c, 0xbd, 0x95, 0x94, 0x7a, 0xea, 0xd2, 0x6a, 0x8b, 0xee, 0x00, 0x68, 0xd6, 0x2a,
	0x08, 0x2a, 0x68, 0x21, 0x96, 0xb6, 0x3b, 0x1b, 0xb5, 0xdd, 0xb5, 0xb4, 0xfd, 0xee, 0xc0, 0x41,
	0xdd, 0x7e, 0xe7, 0x0b, 0xd6, 0xd2, 0x77, 0xab, 0x36, 0x55, 0xeb, 0xc1, 0xc6, 0xd6, 0xc3, 0xed,
	0xad, 0x77, 0xb6, 0x9b, 0xa3, 0x6b, 0x37, 0x10, 0x3d, 0x82, 0x83, 0x1b, 0x4e, 0x57, 0xef, 0x2c,
	0x2f, 0x7c, 0x44, 0x47, 0xd5, 0xdb, 0x6b, 0xba, 0x7a, 0x13, 0x5d, 0xdb, 0x53, 0x15, 0x13, 0x41,
	0x24, 0x4d, 0xd5, 0x83, 0xa3, 0x69, 0x2e, 0x4b, 0xa5, 0xca, 0x67, 0x75, 0x15, 0x5a, 0xbd, 0xe6,
	0xb1, 0xa1, 0xef, 0x69, 0xbc, 0x64, 0x8d, 0x4a, 0xd6, 0xbe, 0xbe, 0x43, 0xae, 0xa3, 0x79, 0x9b,
	0x14, 0x37, 0x9a, 0x68, 0x4e, 0x5a, 0x93, 0x7d, 0xf0, 0x16, 0xfc, 0xaa, 0xac, 0x24, 0x97, 0xe8,
	0x21, 0xf8, 0x29, 0x11, 0x04, 0x7b, 0x43, 0x6f, 0xb4, 0x73, 0x7a, 0x38, 0x26, 0x8c, 0x8d, 0xeb,
	0xac, 0x13, 0x75, 0x20, 0x7a, 0x01, 0x87, 0x6b, 0xfc, 0xd5, 0x8a, 0x12, 0x41, 0x65, 0xeb, 0x55,
	0xbe, 0xac, 0xd2, 0xce, 0x97, 0x8f, 0x59, 0xe6, 0xcf, 0xed, 0xfc, 0x0b, 0x96, 0x96, 0xf9, 0x11,
	0xec, 0x5a, 0xc7, 0x2b, 0x05, 0x6b, 0x98, 0xa9, 0xe1, 0xfe, 0xa9, 0xc6, 0x33, 0xd8, 0xb7, 0xb8,
	0xd3, 0x5c, 0x16, 0xb8, 0x6f, 0x0f, 0xee, 0x2c, 0xe6, 0xd8, 0x19, 0x7a, 0xa3, 0x20, 0xa9, 0x83,
	0xd1, 0xcf, 0x9a, 0x07, 0xdf, 0x64, 0x5c, 0xc8, 0x5c, 0xa5, 0xf5, 0x95, 0x91, 0x50, 0xae, 0xd1,
	0x00, 0xba, 0xf2, 0x7b, 0x9e, 0x7d, 0xa1, 0x7a, 0xd4, 0x13, 0xb3, 0x5f, 0xfb, 0xc0, 0xb3, 0x7c,
	0x20, 0x33, 0xcc, 0xe8, 0xfb, 0x3a, 0xc3, 0x4c, 0x7c, 0xe5, 0x88, 0xc0, 0x72, 0x04, 0x02, 0x5f,
	0x7c, 0x66, 0x66, 0x8e, 0xe5, 0xba, 0xdd, 0x45, 0x67, 0x43, 0x17, 0x0d, 0xd3, 0xf6, 0x8c, 0x69,
	0x13, 0x40, 0xf5, 0xe6, 0x94, 0x1b, 0x8f, 0x20, 0x10, 0x85, 0x20, 0x79, 0xe5, 0x5a, 0xb5, 0x41,
	0x0f, 0xc0, 0xcf, 0x33, 0x2e, 0xb0, 0xab, 0x0c, 0x81, 0x1a, 0x62, 0x27, 0x94, 0x27, 0x2a, 0x1e,
	0x5d, 0xb6, 0x05, 0xfb, 0x5b, 0xcf, 0x3d, 0x36, 0x9e, 0x93, 0xef, 0x79, 0xd2, 0x28, 0x51, 0xf1,
	0xd3, 0x6f, 0x7a, 0xfa, 0xcd, 0x05, 0x58, 0x07, 0xd1, 0x19, 0x84, 0xda, 0x7c, 0x08, 0x37, 0xf2,
	0x8c, 0x27, 0x07, 0x7b, 0x2a, 0x92, 0xd2, 0x4b, 0x72, 0x93, 0x2b, 0x5a, 0x67, 0x10, 0x6a, 0xc7,
	0xb5, 0x92, 0x8c, 0x11, 0xdb, 0x49, 0x4f, 0x20, 0x8c, 0x69, 0x4e, 0x05, 0x45, 0xff, 0x37, 0xa7,
	0x42, 0x39, 0xab, 0x9d, 0xf1, 0x14, 0x7c, 0x49, 0x1e, 0x1d, 0x6f, 0xe8, 0x48, 0x26, 0x6c, 0xc6,
	0x39, 0x7a, 0x09, 0xfd, 0x8b, 0xda, 0xf8, 0x96, 0x37, 0xb4, 0x7e, 0x68, 0x06, 0x9b, 0x71, 0x3e,
	0x3d, 0x78, 0xbf, 0x37, 0x9e, 0xa8, 0x3f, 0xf3, 0x09, 0x61, 0xec, 0x39, 0x61, 0x6c, 0x1e, 0xaa,
	0xed, 0xd9, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x77, 0xc5, 0x3c, 0x3e, 0x21, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PermissionClient is the client API for Permission service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PermissionClient interface {
	Create(ctx context.Context, in *PermissionCreateReq, opts ...grpc.CallOption) (*DefaultRes, error)
	Update(ctx context.Context, in *PermissionUpdateReq, opts ...grpc.CallOption) (*DefaultRes, error)
	Delete(ctx context.Context, in *PermissionDelReq, opts ...grpc.CallOption) (*DefaultRes, error)
	List(ctx context.Context, in *PermissionListReq, opts ...grpc.CallOption) (*PermissionListRes, error)
	UserPermission(ctx context.Context, in *UserPermissionReq, opts ...grpc.CallOption) (*UserPermissionRes, error)
}

type permissionClient struct {
	cc *grpc.ClientConn
}

func NewPermissionClient(cc *grpc.ClientConn) PermissionClient {
	return &permissionClient{cc}
}

func (c *permissionClient) Create(ctx context.Context, in *PermissionCreateReq, opts ...grpc.CallOption) (*DefaultRes, error) {
	out := new(DefaultRes)
	err := c.cc.Invoke(ctx, "/app.permission/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionClient) Update(ctx context.Context, in *PermissionUpdateReq, opts ...grpc.CallOption) (*DefaultRes, error) {
	out := new(DefaultRes)
	err := c.cc.Invoke(ctx, "/app.permission/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionClient) Delete(ctx context.Context, in *PermissionDelReq, opts ...grpc.CallOption) (*DefaultRes, error) {
	out := new(DefaultRes)
	err := c.cc.Invoke(ctx, "/app.permission/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionClient) List(ctx context.Context, in *PermissionListReq, opts ...grpc.CallOption) (*PermissionListRes, error) {
	out := new(PermissionListRes)
	err := c.cc.Invoke(ctx, "/app.permission/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *permissionClient) UserPermission(ctx context.Context, in *UserPermissionReq, opts ...grpc.CallOption) (*UserPermissionRes, error) {
	out := new(UserPermissionRes)
	err := c.cc.Invoke(ctx, "/app.permission/UserPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PermissionServer is the server API for Permission service.
type PermissionServer interface {
	Create(context.Context, *PermissionCreateReq) (*DefaultRes, error)
	Update(context.Context, *PermissionUpdateReq) (*DefaultRes, error)
	Delete(context.Context, *PermissionDelReq) (*DefaultRes, error)
	List(context.Context, *PermissionListReq) (*PermissionListRes, error)
	UserPermission(context.Context, *UserPermissionReq) (*UserPermissionRes, error)
}

// UnimplementedPermissionServer can be embedded to have forward compatible implementations.
type UnimplementedPermissionServer struct {
}

func (*UnimplementedPermissionServer) Create(ctx context.Context, req *PermissionCreateReq) (*DefaultRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedPermissionServer) Update(ctx context.Context, req *PermissionUpdateReq) (*DefaultRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPermissionServer) Delete(ctx context.Context, req *PermissionDelReq) (*DefaultRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedPermissionServer) List(ctx context.Context, req *PermissionListReq) (*PermissionListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedPermissionServer) UserPermission(ctx context.Context, req *UserPermissionReq) (*UserPermissionRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserPermission not implemented")
}

func RegisterPermissionServer(s *grpc.Server, srv PermissionServer) {
	s.RegisterService(&_Permission_serviceDesc, srv)
}

func _Permission_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.permission/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).Create(ctx, req.(*PermissionCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Permission_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.permission/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).Update(ctx, req.(*PermissionUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Permission_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionDelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.permission/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).Delete(ctx, req.(*PermissionDelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Permission_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PermissionListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.permission/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).List(ctx, req.(*PermissionListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Permission_UserPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserPermissionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PermissionServer).UserPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/app.permission/UserPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PermissionServer).UserPermission(ctx, req.(*UserPermissionReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Permission_serviceDesc = grpc.ServiceDesc{
	ServiceName: "app.permission",
	HandlerType: (*PermissionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Permission_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Permission_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Permission_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Permission_List_Handler,
		},
		{
			MethodName: "UserPermission",
			Handler:    _Permission_UserPermission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/permission.proto",
}
